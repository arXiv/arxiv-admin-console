kind: pipeline
type: kubernetes
name: build-docker-images

node:
  environment: gcp

environment:
  ARTIFACT_REPO: arxiv-keycloak

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: docker-socket
    path: /var/run
  - name: docker-cache
    path: /var/lib/docker

trigger:
  branch:
    - master
  event:
    - push

steps:
  - name: hello
    image: alpine/git
    commands:
      - set
      - echo FOO=bar >> envvars
      - ls
      - |
        # Check for forced rebuild in commit message
        if echo "$DRONE_COMMIT_MESSAGE" | grep -q "\\[rebuild-all\\]"; then
          echo "Forced rebuild requested via commit message"
          touch .run-api_arxiv_admin
          touch .run-ui-arxiv-admin
          exit 0
        fi
      - git fetch origin $DRONE_COMMIT_BEFORE
      - echo "Comparing $DRONE_COMMIT_BEFORE â†’ $DRONE_COMMIT_SHA"
      - git diff --name-only $DRONE_COMMIT_BEFORE $DRONE_COMMIT_SHA > changed_files.txt
      - cat changed_files.txt
      - grep -q '^api_arxiv_admin/' changed_files.txt && touch .run-api_arxiv_admin || echo "No changes in api_arxiv_admin"
      - grep -q '^ui-arxiv-admin/' changed_files.txt && touch .run-ui-arxiv-admin || echo "No changes in ui-arxiv-admin"

    volumes:
      - name: docker-socket
        path: /var/run
    when:
      changeset:
        includes:
          - cicd/docker

  - name: build-api
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:1575e2fe2c54556229df469ed4cc237bc9ce130f
    privileged: true
    environment:
      GIT_SHA: ${DRONE_COMMIT_SHA}
      PLUGIN_JSON_KEY:
        from_secret: drone_runner_sa_key
    volumes:
      - name: docker-socket
        path: /var/run
    commands:
      - python3 /arxiv/setup_sa.py
      - if [ -f .run-api_arxiv_admin ]; then . ./envvars && python3 /arxiv/docker_builder.py admin-api api_arxiv_admin/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f api_arxiv_admin/Dockerfile ; fi
    depends_on:
      - hello

  - name: build-ui
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:1575e2fe2c54556229df469ed4cc237bc9ce130f
    privileged: true
    environment:
      GIT_SHA: ${DRONE_COMMIT_SHA}
      PLUGIN_JSON_KEY:
        from_secret: drone_runner_sa_key
    volumes:
      - name: docker-socket
        path: /var/run
    commands:
      - python3 /arxiv/setup_sa.py
      - if [ -f .run-ui-arxiv-admin ]; then . ./envvars && python3 /arxiv/docker_builder.py admin-ui ui-arxiv-admin/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f ui-arxiv-admin/Dockerfile ; fi
    depends_on:
      - hello

  - name: failure
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:e7a4be9
    privileged: true
    environment:
      SLACK_WEBHOOK_URL:
        from_secret: slack_webhook
    commands:
      # - python3 /arxiv/slacker.py
      - echo bummer
    depends_on:
      - build-api
      - build-ui
    when:
      status:
        - failure

  - name: success
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:e7a4be9
    privileged: true
    settings:
      slack_webhook_url:
        from_secret: slack_webhook
    commands:
      - echo SUCCESS

    depends_on:
      - build-api
      - build-ui
    when:
      status:
        - success

volumes:
  - name: docker-cache
    persistentVolumeClaim:
      claimName: docker-cache-pvc
  - name: docker-socket
    host:
      path: /var/run

---
# Pipeline for CentOS 9
kind: pipeline
type: exec
name: centos-9-deploy

node:
  environment: centos9
depends_on:
  - build-docker-images

platform:
  os: linux
  arch: amd64

steps:
  - name: refresh dockers
    commands:
      - export HOME=/home/drone
      - export GOOGLE_APPLICATION_CREDENTIALS=/opt_arxiv/bomb-range/cred/drone-runner-sa.json
      - gcloud auth activate-service-account --key-file=/opt_arxiv/bomb-range/cred/drone-runner-sa.json
      - gcloud auth configure-docker gcr.io
      - cd /opt_arxiv/bomb-range
      - make down
      - make up

